plugins {
    id 'biz.aQute.bnd.builder' version '3.3.0'
}

sourceCompatibility = '1.8'
version = '2.7.0'

repositories {
    maven { url "http://repo.dotcms.com/artifactory/libs-release" }
    mavenCentral()
}

configurations {
    osgiLibs
}

// https://cwiki.apache.org/confluence/display/TIKA#Home-MigratingtoTika2.0.0
// https://cwiki.apache.org/confluence/display/TIKA/Logging
// https://www.slf4j.org/codes.html#noProviders
dependencies {
    compile ('com.dotcms:dotcms:22.05') { transitive = true }
    compile (group: 'org.apache.tika', name: 'tika-core', version: '2.7.0') { transitive = false }
    compile (group: 'org.apache.tika', name: 'tika-parsers-standard-package', version:'2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-core', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-xml-module', version:'2.7.0') { transitive = false }
    osgiLibs ('xerces:xercesImpl:2.12.2') { transitive = false }
//    osgiLibs ('xml-apis:xml-apis:1.4.01') { transitive = false }
    osgiLibs ('commons-codec:commons-codec:1.15') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-html-module', version:'2.7.0') { transitive = false }
    osgiLibs ('org.ccil.cowan.tagsoup:tagsoup:1.2.1') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-html-commons', version:'2.7.0') { transitive = false }
    osgiLibs ('de.l3s.boilerpipe:boilerpipe:1.1.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-zip-commons', version:'2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-apple-module', version:'2.7.0') { transitive = false }
    osgiLibs ('com.googlecode.plist:dd-plist:1.26') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-audiovideo-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.adobe.xmp:xmpcore:6.1.11') { transitive = false }
    osgiLibs ('com.drewnoakes:metadata-extractor:2.18.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-text-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.github.albfernandez:juniversalchardet:2.4.0') { transitive = false }
    osgiLibs ('org.apache.commons:commons-csv:1.9.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-xmp-commons', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-pdf-module', version: '2.7.0') { transitive = false }
    osgiLibs (group: 'org.bouncycastle', name: 'bcmail-jdk18on', version: '1.72') { transitive = false }
    osgiLibs (group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.72') { transitive = false }
    osgiLibs (group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.72') { transitive = false }
    osgiLibs (group: 'org.bouncycastle', name: 'bcutil-jdk18on', version: '1.72') { transitive = false }
    osgiLibs (group: 'com.sun.activation', name: 'jakarta.activation', version: '1.2.2') { transitive = false }
    osgiLibs (group: 'com.sun.istack', name: 'istack-commons-runtime', version: '3.0.12') { transitive = false }
    osgiLibs (group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.3') { transitive = false }
    osgiLibs (group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.6') { transitive = false }
    osgiLibs (group: 'org.glassfish.jaxb', name: 'txw2', version: '2.3.6') { transitive = false }
    osgiLibs (group: 'org.apache.pdfbox', name: 'fontbox', version: '2.0.27') { transitive = false }
    osgiLibs (group: 'org.apache.pdfbox', name: 'jempbox', version: '1.8.17') { transitive = false }
    osgiLibs (group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.27') { transitive = false }
    osgiLibs (group: 'org.apache.pdfbox', name: 'pdfbox-tools', version: '2.0.27') { transitive = false }
    osgiLibs (group: 'org.apache.pdfbox', name: 'xmpbox', version: '2.0.27') { transitive = false }
    osgiLibs (group: 'commons-logging', name: 'commons-logging', version: '1.2') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-webarchive-module', version: '2.7.0') { transitive = false }
    osgiLibs ('org.netpreserve:jwarc:0.21.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-pkg-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.github.junrar:junrar:7.5.4') { transitive = false }
    osgiLibs ('org.brotli:dec:0.1.2') { transitive = false }
    osgiLibs ('org.tukaani:xz:1.9') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-crypto-module', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-ocr-module', version: '2.7.0') { transitive = false }
    osgiLibs ('org.apache.commons:commons-exec:1.3') { transitive = false }
    osgiLibs (group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-news-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.rometools:rome:1.18.0') { transitive = false }
    osgiLibs ('com.rometools:rome-utils:1.18.0') { transitive = false }
    osgiLibs ('org.jdom:jdom2:2.0.6.1') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-digest-commons', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-font-module', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-image-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.github.jai-imageio:jai-imageio-core:1.4.0') { transitive = false }
    osgiLibs ('org.apache.pdfbox:jbig2-imageio:3.0.4') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-mail-commons', version: '2.7.0') { transitive = false }
    osgiLibs ('org.apache.james:apache-mime4j-core:0.8.9') { transitive = false }
    osgiLibs ('org.apache.james:apache-mime4j-dom:0.8.9') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-mail-module', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-code-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.epam:parso:2.0.14') { transitive = false }
    osgiLibs ('org.codelibs:jhighlight:1.1.0') { transitive = false }
    osgiLibs ('org.tallison:jmatio:1.5') { transitive = false }
    osgiLibs ('org.ow2.asm:asm:9.4') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-microsoft-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.github.virtuald:curvesapi:1.07') { transitive = false }
    osgiLibs ('com.pff:java-libpst:0.9.3') { transitive = false }
    osgiLibs ('org.apache.poi:poi:5.2.3')  { transitive = false }
    osgiLibs ('org.apache.poi:poi-ooxml:5.2.3') { transitive = false }
    osgiLibs ('org.apache.poi:poi-ooxml-lite:5.2.3') { transitive = false }
    osgiLibs ('org.apache.poi:poi-scratchpad:5.2.3') { transitive = false }
    osgiLibs ('com.healthmarketscience.jackcess:jackcess:4.0.5') { transitive = false }
    osgiLibs ('com.healthmarketscience.jackcess:jackcess-encrypt:4.0.2') { transitive = false }
    osgiLibs ('org.apache.commons:commons-math3:3.6.1') { transitive = false }
    osgiLibs (group: 'org.apache.commons', name: 'commons-collections4', version: '4.4') { transitive = false }
//    osgiLibs ('org.apache.logging.log4j:log4j-api:2.19.0') { transitive = false }
    osgiLibs ('org.apache.xmlbeans:xmlbeans:5.1.1') { transitive = false }
    osgiLibs ('com.zaxxer:SparseBitSet:1.2') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-miscoffice-module', version: '2.7.0') { transitive = false }

    osgiLibs (group: 'org.apache.tika', name: 'tika-parser-cad-module', version: '2.7.0') { transitive = false }
    osgiLibs ('com.fasterxml.jackson.core:jackson-annotations:2.14.2') { transitive = false }
    osgiLibs ('com.fasterxml.jackson.core:jackson-core:2.14.2') { transitive = false }
    osgiLibs ('com.fasterxml.jackson.core:jackson-databind:2.14.2') { transitive = false }

    osgiLibs (group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.6') { transitive = false }
    osgiLibs (group: 'org.slf4j', name: 'slf4j-api', version: '2.0.6') { transitive = false }
    osgiLibs (group: 'org.slf4j', name: 'jul-to-slf4j', version: '2.0.6') { transitive = false }
    osgiLibs (group: 'org.slf4j', name: 'jcl-over-slf4j', version: '2.0.6') { transitive = false }
    osgiLibs (group: 'org.slf4j', name: 'log4j-over-slf4j', version:'2.0.6') { transitive = false }

    osgiLibs (group: 'commons-io', name: 'commons-io', version: '2.11.0') { transitive = false }
    osgiLibs (group: 'org.apache.commons', name: 'commons-compress', version: '1.22') { transitive = false }

}



import java.util.jar.*
jar.baseName = 'com.dotcms.tika'
/////////////////////////
//Plugin jar
/////////////////////////

jar {
    manifest {
        attributes (
                'Bundle-Vendor': 'dotCMS',
                'Bundle-Description': 'dotCMS - Tika OSGI Provider',
                'Bundle-DocURL': 'https://dotcms.com/',
                'Bundle-Activator': 'com.dotcms.osgi.tika.Activator',
                'Bundle-classpath': "${classPathLibraries()}",
                'DynamicImport-Package': '*',
                'Import-Package': '''
                    javax.servlet.http;version=0,
                    javax.servlet;version=0,
                    com.dotmarketing.filters;version=0,
                    com.dotmarketing.osgi;version=0,
                    com.dotmarketing.util;version=0,
                    com.dotmarketing.exception;version=0,
                    org.apache.felix.http.api;version=0,
                    org.osgi.framework;version=0,
                    org.osgi.service.http;version=0
                '''
        )
    }
}

task cleanLibFiles(type: Delete) {
    delete fileTree("src/main/resources/libs").matching {
        include "**/*"
    }
}

task copyToLib(type: Copy) {
    into "src/main/resources/libs"
    from configurations.osgiLibs
}

copyToLib.dependsOn cleanLibFiles
compileJava.dependsOn copyToLib


jar.finalizedBy 'fragmentJar'

/**
 * Searches for jars inside the src/main/resources/libs folder, the returned list is used for the
 * Bundle-ClassPath attribute.
 * @return String with the list of jars inside the src/main/resources/libs folder or empty if the
 * folder does not exist or it is empty.
 */
def classPathLibraries() {

    def bundleClassPath = ""
    fileTree("src/main/resources/libs").filter { it.isFile() }.each { bundleClassPath += "libs/" + it.name + "," }

    if (bundleClassPath != "") {
        bundleClassPath = '.,' + bundleClassPath
    }

    return bundleClassPath
}

/////////////////////////
//Fragment jar
/////////////////////////

ext {
    bundleName = "OSGI 3rd Party library fragment"
    bundleDescription = "dotCMS - OSGI 3rd Party library fragment"
    fragmentHost = "system.bundle; extension:=framework"
    bundleSymbolicName = "" //Auto generated based on the plugin jar
    bundleVersion = "" //Auto generated based on the plugin jar
    importPackage = "" //Auto generated based on the plugin jar
    bundleManifestVersion = "" //Auto generated based on the plugin jar
    bundleDocURL = "" //Auto generated based on the plugin jar
    bundleVendor = "" //Auto generated based on the plugin jar
}

/**
 * The import generates versions like this: version="[1.8,2)"
 * That format does not work for the export, so we need to replace it
 * to: version=0
 */
ext.fixVersionNumber = {importValue ->
    return importValue.replaceAll("\"\\[[0-9.,]+\\)\"", "0")
}

/**
 * Reads the Manifest file of the just created plugin jar in order to get the required info
 * to automatically create the fragment jar.
 */
task readManifesttAttributes {
    doFirst {
        File file = configurations.baseline.singleFile
        JarFile jar = new JarFile(file)
        Attributes manifest = jar.getManifest().getMainAttributes()
        bundleSymbolicName = "${manifest.getValue('Bundle-SymbolicName')}"
        bundleVersion = "${manifest.getValue('Bundle-Version')}"
        importPackage = "${manifest.getValue('Import-Package')}"
        bundleManifestVersion = "${manifest.getValue('Bundle-ManifestVersion')}"
        bundleDocURL = "${manifest.getValue('Bundle-DocURL')}"
        bundleVendor = "${manifest.getValue('Bundle-Vendor')}"
    }
}

task fragmentJar(type: Jar) {

    doFirst {
        //Setting the fragment jar name
        baseName = jar.baseName
        archiveName = "${baseName}.fragment-${version}.jar"
        importPackage = fixVersionNumber(importPackage)

        manifest {
            attributes (
                    'Bundle-Name': "${bundleName}",
                    'Bundle-Description': "${bundleDescription}",
                    'Bundle-Vendor': "${bundleVendor}",
                    'Bundle-Version': "${version}",
                    'Bundle-SymbolicName': "${baseName}.fragment",
                    'Bundle-ManifestVersion': "${bundleManifestVersion}",
                    'Bundle-DocURL': "${bundleDocURL}",
                    'Fragment-Host': "${fragmentHost}",
                    'Export-Package': "${importPackage}"
            )
        }
    }
}
fragmentJar.dependsOn 'readManifesttAttributes'

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}